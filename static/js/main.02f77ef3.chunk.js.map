{"version":3,"sources":["components/Filter/Filter.module.css","redux/phonebook-selectors.js","redux/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getValue","state","contacts","items","getFilter","filter","getVisibleContacts","getContacts","normalizedFilter","toLocaleLowerCase","name","toLowerCase","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","namesInPhonebook","map","numbersInPhonebook","alert","matchContact","phonebookActions","className","s","form","container","htmlFor","label","type","value","onChange","currentTarget","placeholder","input_name","input","button","ContactList","onClick","onDeleteContact","Filter","target","App","createReducer","actions","_","combineReducers","contactspersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.02f77ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1MEGd\"};","export const getValue = state => state.contacts.items;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { getValue } from '../../redux/phonebook-selectors';\nimport * as phonebookActions from '../../redux/phonebook-actions';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getValue);\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) =>\n    dispatch(phonebookActions.addContact(name, number));\n\n  const matchContact = () => {\n    const namesInPhonebook = contacts.map(({ name }) => name);\n    const numbersInPhonebook = contacts.map(({ number }) => number);\n\n    if (\n      namesInPhonebook.includes(name) ||\n      numbersInPhonebook.includes(number)\n    ) {\n      alert(`${name}${number} is already in contacts!!!`);\n      return true;\n    }\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields');\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n\n    if (matchContact()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <div className={s.container}>\n        <label htmlFor=\"name\" className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => {\n              setName(e.currentTarget.value);\n            }}\n            placeholder=\"Rosie Simpson\"\n            className={s.input_name}\n          ></input>\n        </label>\n\n        <label htmlFor=\"number\" className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => {\n              setNumber(e.currentTarget.value);\n            }}\n            placeholder=\"459-12-56\"\n            className={s.input}\n          ></input>\n        </label>\n      </div>\n\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) =>\n//     dispatch(phonebookActions.addContact(name, number)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n// };\n","import './ContactList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/phonebook-selectors';\nimport * as phonebookActions from '../../redux/phonebook-actions';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(phonebookActions.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"Contacts__item\">\n          <p className=\"Contacts__text\">\n            {name} : {number}\n          </p>\n\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getVisibleContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport { getFilter } from '../../redux/phonebook-selectors';\nimport * as phonebookActions from '../../redux/phonebook-actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(phonebookActions.changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div className=\"main_container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\n// const [contacts, setContacts] = useState(() => {\n//   return JSON.parse(window.localStorage.getItem('contacts')) ?? baseContacts;\n// });\n// // const [filter, setFilter] = useState('');\n\n// useEffect(() => {\n//   return localStorage.setItem('contacts', JSON.stringify(contacts));\n// }, [contacts]);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// import types from './phonebook-types';\r\n\r\n// const items = (\r\n//   state = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//   ],\r\n//   { type, payload },\r\n// ) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducers';\r\n\r\nconst contactspersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactspersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// import { combineReducers, createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import phonebookReducer from './phonebook-reducers';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2VwsX\",\"button\":\"ContactForm_button__3VIrj\",\"container\":\"ContactForm_container__5-ABX\",\"input_name\":\"ContactForm_input_name__3EiJX\"};"],"sourceRoot":""}